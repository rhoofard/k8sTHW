- hosts: workers
  tasks:
    - name: make containerd file
      shell: |
        sudo mkdir -p /etc/containerd/

        cat << EOF | sudo tee /etc/containerd/config.toml
        [plugins]
          [plugins.cri.containerd]
            snapshotter = "overlayfs"
            [plugins.cri.containerd.default_runtime]
              runtime_type = "io.containerd.runtime.v1.linux"
              runtime_engine = "/usr/local/bin/runc"
              runtime_root = ""
            [plugins.cri.containerd.untrusted_workload_runtime]
              runtime_type = "io.containerd.runtime.v1.linux"
              runtime_engine = "/usr/local/bin/runsc"
              runtime_root = "/run/containerd/runsc"
            [plugins.cri.containerd.gvisor]
              runtime_type = "io.containerd.runtime.v1.linux"
              runtime_engine = "/usr/local/bin/runsc"
              runtime_root = "/run/containerd/runsc"
        EOF

    - name: create containerd.service
      shell: |
        cat <<EOF | sudo tee /etc/systemd/system/containerd.service
        [Unit]
        Description=containerd container runtime
        Documentation=https://containerd.io
        After=network.target

        [Service]
        ExecStartPre=/sbin/modprobe overlay
        ExecStart=/bin/containerd

        Delegate=yes
        KillMode=process
        # Having non-zero Limit*s causes performance problems due to accounting overhead
        # in the kernel. We recommend using cgroups to do container-local accounting.
        LimitNPROC=infinity
        LimitCORE=infinity
        LimitNOFILE=infinity
        # Comment TasksMax if your systemd version does not supports it.
        # Only systemd 226 and above support this version.
        TasksMax=infinity

        [Install]
        WantedBy=multi-user.target
        EOF

- hosts: worker_0
  tasks:
    - name: kubelet config
      shell: |
        POD_CIDR="$(echo $(curl --silent -H Metadata:true "http://169.254.169.254/metadata/instance/compute/tags?api-version=2017-08-01&format=text") | cut -d : -f2)"
        cat <<EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
        kind: KubeletConfiguration
        apiVersion: kubelet.config.k8s.io/v1beta1
        authentication:
          anonymous:
            enabled: false
          webhook:
            enabled: true
          x509:
            clientCAFile: "/var/lib/kubernetes/ca.pem"
        authorization:
          mode: Webhook
        clusterDomain: "cluster.local"
        clusterDNS:
          - "10.32.0.10"
        podCIDR: "${POD_CIDR}"
        resolvConf: "/run/systemd/resolve/resolv.conf"
        runtimeRequestTimeout: "15m"
        tlsCertFile: "/var/lib/kubelet/worker-0.pem"
        tlsPrivateKeyFile: "/var/lib/kubelet/worker-0-key.pem"
        EOF

- hosts: worker_1
  tasks:
    - name: kubelet config
      shell: |
        POD_CIDR="$(echo $(curl --silent -H Metadata:true "http://169.254.169.254/metadata/instance/compute/tags?api-version=2017-08-01&format=text") | cut -d : -f2)"
        cat <<EOF | sudo tee /var/lib/kubelet/kubelet-config.yaml
        kind: KubeletConfiguration
        apiVersion: kubelet.config.k8s.io/v1beta1
        authentication:
          anonymous:
            enabled: false
          webhook:
            enabled: true
          x509:
            clientCAFile: "/var/lib/kubernetes/ca.pem"
        authorization:
          mode: Webhook
        clusterDomain: "cluster.local"
        clusterDNS:
          - "10.32.0.10"
        podCIDR: "${POD_CIDR}"
        resolvConf: "/run/systemd/resolve/resolv.conf"
        runtimeRequestTimeout: "15m"
        tlsCertFile: "/var/lib/kubelet/worker-1.pem"
        tlsPrivateKeyFile: "/var/lib/kubelet/worker-1-key.pem"
        EOF
- hosts: workers
  tasks:
    - name: kubelet.service
      shell: |
        cat <<EOF | sudo tee /etc/systemd/system/kubelet.service
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/kubernetes/kubernetes
        After=containerd.service
        Requires=containerd.service

        [Service]
        ExecStart=/usr/local/bin/kubelet \\
          --config=/var/lib/kubelet/kubelet-config.yaml \\
          --container-runtime=remote \\
          --container-runtime-endpoint=unix:///var/run/containerd/containerd.sock \\
          --cloud-provider=external \\
          --kubeconfig=/var/lib/kubelet/kubeconfig \\
          --network-plugin=cni \\
          --register-node=true \\
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF

    - name: kube proxy config
      shell: |
        sudo mv kube-proxy.kubeconfig /var/lib/kube-proxy/kubeconfig

        cat <<EOF | sudo tee /var/lib/kube-proxy/kube-proxy-config.yaml
        kind: KubeProxyConfiguration
        apiVersion: kubeproxy.config.k8s.io/v1alpha1
        clientConnection:
          kubeconfig: "/var/lib/kube-proxy/kubeconfig"
        mode: "iptables"
        clusterCIDR: "10.200.0.0/16"
        EOF

    - name: kube proxy service systemd
      shell: |
        cat <<EOF | sudo tee /etc/systemd/system/kube-proxy.service
        [Unit]
        Description=Kubernetes Kube Proxy
        Documentation=https://github.com/kubernetes/kubernetes

        [Service]
        ExecStart=/usr/local/bin/kube-proxy \\
          --config=/var/lib/kube-proxy/kube-proxy-config.yaml
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target
        EOF

    - name: start workers service
      shell: |
        sudo systemctl daemon-reload
        sudo systemctl enable containerd kubelet kube-proxy
        sudo systemctl start containerd kubelet kube-proxy